<canvas id="comets-bg" class="fixed top-0 left-0 w-full h-full -z-10"></canvas>

<script>
    const canvas = document.getElementById("comets-bg") as HTMLCanvasElement;
    const ctx = canvas.getContext("2d")!;


    // Ajustar el tama√±o del canvas

    function resizeCanvas() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    }
    resizeCanvas();
    window.addEventListener("resize", resizeCanvas);

    // Clase cometa
    class Comet {

  x!: number;
  y!: number;
  vx!: number;
  vy!: number;
  size!: number;
  length!: number;

    constructor() {
      this.reset();
    }
    reset() {
      this.x = Math.random() * canvas.width;
      this.y = Math.random() * canvas.height;
      this.vx = -2 - Math.random() * 2;
      this.vy = 1 + Math.random() * 1.5;
      this.size = 2 + Math.random() * 2;
      this.length = 80 + Math.random() * 50;
    }
    update() {
      this.x += this.vx;
      this.y += this.vy;
      if (this.x < -this.length || this.y > canvas.height + this.length) {
        this.reset();
        this.x = canvas.width + this.length;
        this.y = Math.random() * canvas.height * 0.5;
      }
    }
    draw(ctx: CanvasRenderingContext2D) {
      const gradient = ctx.createLinearGradient(this.x, this.y, this.x + this.length, this.y - this.length);
      gradient.addColorStop(0, "rgba(0,198,109,0)");
      gradient.addColorStop(1, "rgba(0,198,109,0.8)");

      ctx.beginPath();
      ctx.strokeStyle = gradient;
      ctx.lineWidth = this.size;
      ctx.moveTo(this.x, this.y);
      ctx.lineTo(this.x + this.length, this.y - this.length);
      ctx.stroke();
    }
  }

  const comets = Array.from({ length: 20 }, () => new Comet());

  function animate() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    comets.forEach((comet) => {
      comet.update();
      comet.draw(ctx);
    });
    requestAnimationFrame(animate);
    }
    animate();

</script>